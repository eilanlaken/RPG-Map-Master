LiquidFun:
https://docs.google.com/presentation/d/1fEAb4-lSyqxlVGNPog3G1LZ7UgtvxfRAwR0dwd19G4g/edit?pli=1#slide=id.g343a5269c_00

contact points:
contact points explained:
https://www.youtube.com/watch?v=5gDC1GU3Ivg
for circle-anything: a single contact point.
for polygon-polygon:
    - loop through poly A vertices, find closest point on B.
    - loop through poly B vertices, find closest point on A.

rectangle vs rectangle collision detection:
https://www.jkh.me/files/tutorials/Separating%20Axis%20Theorem%20for%20Oriented%20Bounding%20Boxes.pdf

https://code.tutsplus.com/how-to-create-a-custom-2d-physics-engine-the-basics-and-impulse-resolution--gamedev-6331t
https://code.tutsplus.com/how-to-create-a-custom-2d-physics-engine-the-core-engine--gamedev-7493t
https://code.tutsplus.com/how-to-create-a-custom-2d-physics-engine-friction-entityContainer-and-jump-table--gamedev-7756t
https://code.tutsplus.com/how-to-create-a-custom-2d-physics-engine-oriented-rigid-bodies--gamedev-8032t

useful reference
https://github.com/acrlw/Physics2D/blob/master/Physics2D/source/dynamics/physics2d_system.cpp

constraints:
https://github.com/acrlw/Physics2D/blob/master/Physics2D/include/physics2d_joint.h
https://github.com/acrlw/Physics2D/blob/master/Physics2D/include/physics2d_weld_joint.h
https://ubm-twvideo01.s3.amazonaws.com/o1/vault/gdc09/slides/04-GDC09_Catto_Erin_Solver.pdf
https://box2d.org/files/ErinCatto_UnderstandingConstraints_GDC2014.pdf
https://dyn4j.org/tags#constrained-dynamics
https://dyn4j.org/2010/07/equality-constraints/

https://github.com/liabru/matter-js/blob/master/src/collision/Resolver.js